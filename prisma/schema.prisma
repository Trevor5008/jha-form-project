// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Project {
  id                Int           @id @default(autoincrement())
  name              String    
  owner             String?  // pre-populated
  location          String?  // pre-populated
  Tasks          Task[]
}

model Task {
  id                Int           @id @default(autoincrement())
  name              String 
  supervisor        String
  project           Project       @relation(fields: [projectId], references: [id])
  projectId         Int
  Shifts            Shift[]
}

model Shift {
  id                Int           @id @default(autoincrement())
  status            String
  foreman           String
  startDateTime     DateTime      
  endDateTime       DateTime?       
  permits           Permit[]
  task           Task       @relation(fields: [taskId], references: [id])
  taskId         Int
  shiftCategoryOptions   ShiftCategoryOption[]
  miscOptions      MiscOption[]
}

model Category {
  id                Int           @id @default(autoincrement())
  name              String    
  categoryOptions   CategoryOption[]  
  shiftCategoryOptions ShiftCategoryOption[]
  miscOptions           MiscOption[]
}

model CategoryOption {
  id                Int           @id @default(autoincrement())
  name              String
  categoryId        Int
  category          Category  @relation(fields: [categoryId], references: [id])
  shiftCategoryOptions   ShiftCategoryOption[]
}

model ShiftCategoryOption {
  shiftId           Int
  categoryId        Int
  categoryOptionId  Int
  checked           Boolean
  details           String
  shift             Shift     @relation(fields: [shiftId], references: [id])
  category          Category   @relation(fields: [categoryId], references: [id])
  categoryOption    CategoryOption  @relation(fields: [categoryOptionId], references: [id])

  @@id([shiftId, categoryId, categoryOptionId])
}

model MiscOption {
  shiftId           Int
  categoryId        Int
  details           String
  shift             Shift     @relation(fields: [shiftId], references: [id])
  category          Category  @relation(fields: [categoryId], references: [id])

  @@id([shiftId, categoryId])
}

model Permit {
  id                Int           @id @default(autoincrement())
  name              String
  shift             Shift         @relation(fields: [shiftId], references: [id])
  shiftId           Int
}